tensorflowClassification;	chooseClassifier(c); c; ; ; tfCreateClassifier(c)


# Resolve classifier grammar
tfnnClassifier; 		tfCreateClassifier(c); c; ; ; tfCreate_classifier_nn(c)

tf_nn;			tfCreate_classifier_nn(c); c,p; ; ; de.upb.crc901.mlplan.services.MLPipelinePlan:setClassifier(c,'tflib.NeuralNet',p)	->	tf-NeuralNet-set-layer_count(c,p)	->	tf-NeuralNet-set-epochs(c,p)	-> tf-NeuralNet-set-learning_rate(c,p)	-> tf-NeuralNet-set-batch_size(c,p)		
#-----------------------------------------------#
#     Option Configuration for TF NeuralNet     #
#-----------------------------------------------#

tf-NeuralNet-set-layer_count;		tf-NeuralNet-set-layer_count(c,p); c,p; ; ;  noop()
tf-NeuralNet-set-layer_count;		tf-NeuralNet-set-layer_count(c,p); c,p,t; ; OptionsFor_TF_layer_count(t); de.upb.crc901.mlplan.services.MLPipelinePlan:addOptions(c,p,'-layer_count', t)

tf-NeuralNet-set-epochs;		tf-NeuralNet-set-epochs(c,p); c,p; ; ;  noop()
tf-NeuralNet-set-epochs;		tf-NeuralNet-set-epochs(c,p); c,p,t; ; OptionsFor_TF_epochs(t); de.upb.crc901.mlplan.services.MLPipelinePlan:addOptions(c,p,'-epochs', t)


tf-NeuralNet-set-learning_rate;		tf-NeuralNet-set-learning_rate(c,p); c,p; ; ;  noop()
tf-NeuralNet-set-learning_rate;		tf-NeuralNet-set-learning_rate(c,p); c,p,t; ; OptionsFor_TF_learning_rate(t); de.upb.crc901.mlplan.services.MLPipelinePlan:addOptions(c,p,'-learning_rate', t)


tf-NeuralNet-set-batch_size;		tf-NeuralNet-set-batch_size(c,p); c,p; ; ;  noop()
tf-NeuralNet-set-batch_size;		tf-NeuralNet-set-batch_size(c,p); c,p,t; ; OptionsFor_TF_batch_size(t); de.upb.crc901.mlplan.services.MLPipelinePlan:addOptions(c,p,'-batch_size', t)
