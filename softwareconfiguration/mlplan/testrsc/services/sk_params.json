{
    "C": {
        "classes": [
            "sklearn.svm.LinearSVC",
            "sklearn.linear_model.LogisticRegression",
            "sklearn.linear_model.PassiveAggressiveClassifier",
            "sklearn.svm.SVC"
        ],
        "type": "float"
    },
    "Cs": {
        "classes": [
            "sklearn.linear_model.LogisticRegressionCV"
        ],
        "type": "int"
    },
    "activation": {
        "classes": [
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "str"
    },
    "algorithm": {
        "classes": [
            "sklearn.ensemble.AdaBoostClassifier",
            "sklearn.neighbors.KNeighborsClassifier",
            "sklearn.neighbors.NearestNeighbors",
            "sklearn.neighbors.RadiusNeighborsClassifier"
        ],
        "type": "str"
    },
    "alpha": {
        "classes": [
            "sklearn.naive_bayes.BernoulliNB",
            "sklearn.naive_bayes.MultinomialNB",
            "sklearn.linear_model.RidgeClassifier",
            "sklearn.linear_model.SGDClassifier",
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "float"
    },
    "alphas": {
        "classes": [
            "sklearn.linear_model.RidgeClassifierCV"
        ],
        "type": "tuple"
    },
    "average": {
        "classes": [
            "sklearn.linear_model.PassiveAggressiveClassifier",
            "sklearn.linear_model.SGDClassifier"
        ],
        "type": "bool"
    },
    "base_estimator": {
        "classes": [
            "sklearn.ensemble.AdaBoostClassifier",
            "sklearn.ensemble.BaggingClassifier"
        ],
        "type": "complex/multitype"
    },
    "batch_size": {
        "classes": [
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "str"
    },
    "beta_1": {
        "classes": [
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "float"
    },
    "beta_2": {
        "classes": [
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "float"
    },
    "binarize": {
        "classes": [
            "sklearn.naive_bayes.BernoulliNB"
        ],
        "type": "float"
    },
    "bootstrap": {
        "classes": [
            "sklearn.ensemble.BaggingClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.ensemble.RandomForestClassifier"
        ],
        "type": "bool"
    },
    "bootstrap_features": {
        "classes": [
            "sklearn.ensemble.BaggingClassifier"
        ],
        "type": "bool"
    },
    "cache_size": {
        "classes": [
            "sklearn.svm.NuSVC",
            "sklearn.svm.SVC"
        ],
        "type": "int"
    },
    "class_prior": {
        "classes": [
            "sklearn.naive_bayes.BernoulliNB",
            "sklearn.naive_bayes.MultinomialNB"
        ],
        "type": "complex/multitype"
    },
    "class_weight": {
        "classes": [
            "sklearn.tree.ExtraTreeClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.svm.LinearSVC",
            "sklearn.linear_model.LogisticRegression",
            "sklearn.linear_model.LogisticRegressionCV",
            "sklearn.svm.NuSVC",
            "sklearn.linear_model.PassiveAggressiveClassifier",
            "sklearn.ensemble.RandomForestClassifier",
            "sklearn.linear_model.RidgeClassifier",
            "sklearn.linear_model.RidgeClassifierCV",
            "sklearn.linear_model.SGDClassifier",
            "sklearn.svm.SVC",
            "sklearn.tree.DecisionTreeClassifier"
        ],
        "type": "complex/multitype"
    },
    "coef0": {
        "classes": [
            "sklearn.svm.NuSVC",
            "sklearn.svm.SVC"
        ],
        "type": "float"
    },
    "copy_X": {
        "classes": [
            "sklearn.linear_model.RidgeClassifier"
        ],
        "type": "bool"
    },
    "copy_X_train": {
        "classes": [
            "sklearn.gaussian_process.GaussianProcessClassifier"
        ],
        "type": "bool"
    },
    "covariance_prior": {
        "classes": [
            "sklearn.mixture.BayesianGaussianMixture"
        ],
        "type": "complex/multitype"
    },
    "covariance_type": {
        "classes": [
            "sklearn.mixture.BayesianGaussianMixture"
        ],
        "type": "str"
    },
    "criterion": {
        "classes": [
            "sklearn.tree.ExtraTreeClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.ensemble.RandomForestClassifier",
            "sklearn.tree.DecisionTreeClassifier"
        ],
        "type": "str"
    },
    "cv": {
        "classes": [
            "sklearn.linear_model.LogisticRegressionCV",
            "sklearn.linear_model.RidgeClassifierCV"
        ],
        "type": "complex/multitype"
    },
    "decision_function_shape": {
        "classes": [
            "sklearn.svm.NuSVC",
            "sklearn.svm.SVC"
        ],
        "type": "str"
    },
    "degree": {
        "classes": [
            "sklearn.svm.NuSVC",
            "sklearn.svm.SVC"
        ],
        "type": "int"
    },
    "degrees_of_freedom_prior": {
        "classes": [
            "sklearn.mixture.BayesianGaussianMixture"
        ],
        "type": "complex/multitype"
    },
    "dual": {
        "classes": [
            "sklearn.svm.LinearSVC",
            "sklearn.linear_model.LogisticRegression",
            "sklearn.linear_model.LogisticRegressionCV"
        ],
        "type": "bool"
    },
    "early_stopping": {
        "classes": [
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "bool"
    },
    "epsilon": {
        "classes": [
            "sklearn.linear_model.SGDClassifier",
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "float"
    },
    "eta0": {
        "classes": [
            "sklearn.linear_model.SGDClassifier"
        ],
        "type": "float"
    },
    "fit_intercept": {
        "classes": [
            "sklearn.svm.LinearSVC",
            "sklearn.linear_model.LogisticRegression",
            "sklearn.linear_model.LogisticRegressionCV",
            "sklearn.linear_model.PassiveAggressiveClassifier",
            "sklearn.linear_model.RidgeClassifier",
            "sklearn.linear_model.RidgeClassifierCV",
            "sklearn.linear_model.SGDClassifier"
        ],
        "type": "bool"
    },
    "fit_prior": {
        "classes": [
            "sklearn.naive_bayes.BernoulliNB",
            "sklearn.naive_bayes.MultinomialNB"
        ],
        "type": "bool"
    },
    "gamma": {
        "classes": [
            "sklearn.svm.NuSVC",
            "sklearn.svm.SVC"
        ],
        "type": "str"
    },
    "hidden_layer_sizes": {
        "classes": [
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "tuple"
    },
    "init": {
        "classes": [
            "sklearn.ensemble.GradientBoostingClassifier"
        ],
        "type": "complex/multitype"
    },
    "init_params": {
        "classes": [
            "sklearn.mixture.BayesianGaussianMixture"
        ],
        "type": "str"
    },
    "intercept_scaling": {
        "classes": [
            "sklearn.svm.LinearSVC",
            "sklearn.linear_model.LogisticRegression",
            "sklearn.linear_model.LogisticRegressionCV"
        ],
        "type": "float"
    },
    "kernel": {
        "classes": [
            "sklearn.gaussian_process.GaussianProcessClassifier",
            "sklearn.svm.NuSVC",
            "sklearn.svm.SVC"
        ],
        "type": "str"
    },
    "l1_ratio": {
        "classes": [
            "sklearn.linear_model.SGDClassifier"
        ],
        "type": "float"
    },
    "leaf_size": {
        "classes": [
            "sklearn.neighbors.KNeighborsClassifier",
            "sklearn.neighbors.NearestNeighbors",
            "sklearn.neighbors.RadiusNeighborsClassifier"
        ],
        "type": "int"
    },
    "learning_rate": {
        "classes": [
            "sklearn.ensemble.AdaBoostClassifier",
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.linear_model.SGDClassifier",
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "str"
    },
    "learning_rate_init": {
        "classes": [
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "float"
    },
    "loss": {
        "classes": [
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.svm.LinearSVC",
            "sklearn.linear_model.PassiveAggressiveClassifier",
            "sklearn.linear_model.SGDClassifier"
        ],
        "type": "str"
    },
    "max_depth": {
        "classes": [
            "sklearn.tree.ExtraTreeClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.ensemble.RandomForestClassifier",
            "sklearn.tree.DecisionTreeClassifier"
        ],
        "type": "complex/multitype"
    },
    "max_features": {
        "classes": [
            "sklearn.ensemble.BaggingClassifier",
            "sklearn.tree.ExtraTreeClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.ensemble.RandomForestClassifier",
            "sklearn.tree.DecisionTreeClassifier"
        ],
        "type": "complex/multitype"
    },
    "max_iter": {
        "classes": [
            "sklearn.mixture.BayesianGaussianMixture",
            "sklearn.svm.LinearSVC",
            "sklearn.linear_model.LogisticRegression",
            "sklearn.linear_model.LogisticRegressionCV",
            "sklearn.svm.NuSVC",
            "sklearn.linear_model.PassiveAggressiveClassifier",
            "sklearn.linear_model.RidgeClassifier",
            "sklearn.linear_model.SGDClassifier",
            "sklearn.svm.SVC",
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "int"
    },
    "max_iter_predict": {
        "classes": [
            "sklearn.gaussian_process.GaussianProcessClassifier"
        ],
        "type": "int"
    },
    "max_leaf_nodes": {
        "classes": [
            "sklearn.tree.ExtraTreeClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.ensemble.RandomForestClassifier",
            "sklearn.tree.DecisionTreeClassifier"
        ],
        "type": "complex/multitype"
    },
    "max_samples": {
        "classes": [
            "sklearn.ensemble.BaggingClassifier"
        ],
        "type": "float"
    },
    "mean_precision_prior": {
        "classes": [
            "sklearn.mixture.BayesianGaussianMixture"
        ],
        "type": "complex/multitype"
    },
    "mean_prior": {
        "classes": [
            "sklearn.mixture.BayesianGaussianMixture"
        ],
        "type": "complex/multitype"
    },
    "metric": {
        "classes": [
            "sklearn.neighbors.KNeighborsClassifier",
            "sklearn.neighbors.NearestNeighbors",
            "sklearn.neighbors.RadiusNeighborsClassifier"
        ],
        "type": "str"
    },
    "metric_params": {
        "classes": [
            "sklearn.neighbors.KNeighborsClassifier",
            "sklearn.neighbors.NearestNeighbors",
            "sklearn.neighbors.RadiusNeighborsClassifier"
        ],
        "type": "complex/multitype"
    },
    "min_hash_match": {
        "classes": [
            "sklearn.neighbors.LSHForest"
        ],
        "type": "int"
    },
    "min_impurity_decrease": {
        "classes": [
            "sklearn.tree.ExtraTreeClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.ensemble.RandomForestClassifier",
            "sklearn.tree.DecisionTreeClassifier"
        ],
        "type": "float"
    },
    "min_impurity_split": {
        "classes": [
            "sklearn.tree.ExtraTreeClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.ensemble.RandomForestClassifier",
            "sklearn.tree.DecisionTreeClassifier"
        ],
        "type": "complex/multitype"
    },
    "min_samples_leaf": {
        "classes": [
            "sklearn.tree.ExtraTreeClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.ensemble.RandomForestClassifier",
            "sklearn.tree.DecisionTreeClassifier"
        ],
        "type": "int"
    },
    "min_samples_split": {
        "classes": [
            "sklearn.tree.ExtraTreeClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.ensemble.RandomForestClassifier",
            "sklearn.tree.DecisionTreeClassifier"
        ],
        "type": "int"
    },
    "min_weight_fraction_leaf": {
        "classes": [
            "sklearn.tree.ExtraTreeClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.ensemble.RandomForestClassifier",
            "sklearn.tree.DecisionTreeClassifier"
        ],
        "type": "float"
    },
    "momentum": {
        "classes": [
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "float"
    },
    "multi_class": {
        "classes": [
            "sklearn.gaussian_process.GaussianProcessClassifier",
            "sklearn.svm.LinearSVC",
            "sklearn.linear_model.LogisticRegression",
            "sklearn.linear_model.LogisticRegressionCV"
        ],
        "type": "str"
    },
    "n_candidates": {
        "classes": [
            "sklearn.neighbors.LSHForest"
        ],
        "type": "int"
    },
    "n_components": {
        "classes": [
            "sklearn.mixture.BayesianGaussianMixture",
            "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
        ],
        "type": "complex/multitype"
    },
    "n_estimators": {
        "classes": [
            "sklearn.ensemble.AdaBoostClassifier",
            "sklearn.ensemble.BaggingClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.neighbors.LSHForest",
            "sklearn.ensemble.RandomForestClassifier"
        ],
        "type": "int"
    },
    "n_init": {
        "classes": [
            "sklearn.mixture.BayesianGaussianMixture"
        ],
        "type": "int"
    },
    "n_iter": {
        "classes": [
            "sklearn.linear_model.PassiveAggressiveClassifier",
            "sklearn.linear_model.SGDClassifier"
        ],
        "type": "complex/multitype"
    },
    "n_jobs": {
        "classes": [
            "sklearn.ensemble.BaggingClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.gaussian_process.GaussianProcessClassifier",
            "sklearn.neighbors.KNeighborsClassifier",
            "sklearn.linear_model.LogisticRegression",
            "sklearn.linear_model.LogisticRegressionCV",
            "sklearn.neighbors.NearestNeighbors",
            "sklearn.linear_model.PassiveAggressiveClassifier",
            "sklearn.ensemble.RandomForestClassifier",
            "sklearn.linear_model.SGDClassifier"
        ],
        "type": "int"
    },
    "n_neighbors": {
        "classes": [
            "sklearn.neighbors.KNeighborsClassifier",
            "sklearn.neighbors.LSHForest",
            "sklearn.neighbors.NearestNeighbors"
        ],
        "type": "int"
    },
    "n_restarts_optimizer": {
        "classes": [
            "sklearn.gaussian_process.GaussianProcessClassifier"
        ],
        "type": "int"
    },
    "nesterovs_momentum": {
        "classes": [
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "bool"
    },
    "normalize": {
        "classes": [
            "sklearn.linear_model.RidgeClassifier",
            "sklearn.linear_model.RidgeClassifierCV"
        ],
        "type": "bool"
    },
    "nu": {
        "classes": [
            "sklearn.svm.NuSVC"
        ],
        "type": "float"
    },
    "oob_score": {
        "classes": [
            "sklearn.ensemble.BaggingClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.ensemble.RandomForestClassifier"
        ],
        "type": "bool"
    },
    "optimizer": {
        "classes": [
            "sklearn.gaussian_process.GaussianProcessClassifier"
        ],
        "type": "str"
    },
    "outlier_label": {
        "classes": [
            "sklearn.neighbors.RadiusNeighborsClassifier"
        ],
        "type": "complex/multitype"
    },
    "p": {
        "classes": [
            "sklearn.neighbors.KNeighborsClassifier",
            "sklearn.neighbors.NearestNeighbors",
            "sklearn.neighbors.RadiusNeighborsClassifier"
        ],
        "type": "int"
    },
    "penalty": {
        "classes": [
            "sklearn.svm.LinearSVC",
            "sklearn.linear_model.LogisticRegression",
            "sklearn.linear_model.LogisticRegressionCV",
            "sklearn.linear_model.SGDClassifier"
        ],
        "type": "str"
    },
    "power_t": {
        "classes": [
            "sklearn.linear_model.SGDClassifier",
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "float"
    },
    "presort": {
        "classes": [
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.tree.DecisionTreeClassifier"
        ],
        "type": "bool"
    },
    "priors": {
        "classes": [
            "sklearn.naive_bayes.GaussianNB",
            "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
            "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis"
        ],
        "type": "complex/multitype"
    },
    "probability": {
        "classes": [
            "sklearn.svm.NuSVC",
            "sklearn.svm.SVC"
        ],
        "type": "bool"
    },
    "radius": {
        "classes": [
            "sklearn.neighbors.LSHForest",
            "sklearn.neighbors.NearestNeighbors",
            "sklearn.neighbors.RadiusNeighborsClassifier"
        ],
        "type": "float"
    },
    "radius_cutoff_ratio": {
        "classes": [
            "sklearn.neighbors.LSHForest"
        ],
        "type": "float"
    },
    "random_state": {
        "classes": [
            "sklearn.ensemble.AdaBoostClassifier",
            "sklearn.ensemble.BaggingClassifier",
            "sklearn.mixture.BayesianGaussianMixture",
            "sklearn.tree.ExtraTreeClassifier",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.gaussian_process.GaussianProcessClassifier",
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.neighbors.LSHForest",
            "sklearn.svm.LinearSVC",
            "sklearn.linear_model.LogisticRegression",
            "sklearn.linear_model.LogisticRegressionCV",
            "sklearn.svm.NuSVC",
            "sklearn.linear_model.PassiveAggressiveClassifier",
            "sklearn.ensemble.RandomForestClassifier",
            "sklearn.linear_model.RidgeClassifier",
            "sklearn.linear_model.SGDClassifier",
            "sklearn.svm.SVC",
            "sklearn.neural_network.MLPClassifier",
            "sklearn.tree.DecisionTreeClassifier"
        ],
        "type": "complex/multitype"
    },
    "refit": {
        "classes": [
            "sklearn.linear_model.LogisticRegressionCV"
        ],
        "type": "bool"
    },
    "reg_covar": {
        "classes": [
            "sklearn.mixture.BayesianGaussianMixture"
        ],
        "type": "float"
    },
    "reg_param": {
        "classes": [
            "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis"
        ],
        "type": "float"
    },
    "scoring": {
        "classes": [
            "sklearn.linear_model.LogisticRegressionCV",
            "sklearn.linear_model.RidgeClassifierCV"
        ],
        "type": "complex/multitype"
    },
    "shrinkage": {
        "classes": [
            "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
        ],
        "type": "complex/multitype"
    },
    "shrinking": {
        "classes": [
            "sklearn.svm.NuSVC",
            "sklearn.svm.SVC"
        ],
        "type": "bool"
    },
    "shuffle": {
        "classes": [
            "sklearn.linear_model.PassiveAggressiveClassifier",
            "sklearn.linear_model.SGDClassifier",
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "bool"
    },
    "solver": {
        "classes": [
            "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
            "sklearn.linear_model.LogisticRegression",
            "sklearn.linear_model.LogisticRegressionCV",
            "sklearn.linear_model.RidgeClassifier",
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "str"
    },
    "splitter": {
        "classes": [
            "sklearn.tree.ExtraTreeClassifier",
            "sklearn.tree.DecisionTreeClassifier"
        ],
        "type": "str"
    },
    "store_covariance": {
        "classes": [
            "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
            "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis"
        ],
        "type": "bool"
    },
    "store_covariances": {
        "classes": [
            "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis"
        ],
        "type": "complex/multitype"
    },
    "subsample": {
        "classes": [
            "sklearn.ensemble.GradientBoostingClassifier"
        ],
        "type": "float"
    },
    "tol": {
        "classes": [
            "sklearn.mixture.BayesianGaussianMixture",
            "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
            "sklearn.svm.LinearSVC",
            "sklearn.linear_model.LogisticRegression",
            "sklearn.linear_model.LogisticRegressionCV",
            "sklearn.svm.NuSVC",
            "sklearn.linear_model.PassiveAggressiveClassifier",
            "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
            "sklearn.linear_model.RidgeClassifier",
            "sklearn.linear_model.SGDClassifier",
            "sklearn.svm.SVC",
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "float"
    },
    "validation_fraction": {
        "classes": [
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "float"
    },
    "verbose": {
        "classes": [
            "sklearn.ensemble.BaggingClassifier",
            "sklearn.mixture.BayesianGaussianMixture",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.svm.LinearSVC",
            "sklearn.linear_model.LogisticRegression",
            "sklearn.linear_model.LogisticRegressionCV",
            "sklearn.svm.NuSVC",
            "sklearn.linear_model.PassiveAggressiveClassifier",
            "sklearn.ensemble.RandomForestClassifier",
            "sklearn.linear_model.SGDClassifier",
            "sklearn.svm.SVC",
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "bool"
    },
    "verbose_interval": {
        "classes": [
            "sklearn.mixture.BayesianGaussianMixture"
        ],
        "type": "int"
    },
    "warm_start": {
        "classes": [
            "sklearn.ensemble.BaggingClassifier",
            "sklearn.mixture.BayesianGaussianMixture",
            "sklearn.ensemble.ExtraTreesClassifier",
            "sklearn.gaussian_process.GaussianProcessClassifier",
            "sklearn.ensemble.GradientBoostingClassifier",
            "sklearn.linear_model.LogisticRegression",
            "sklearn.linear_model.PassiveAggressiveClassifier",
            "sklearn.ensemble.RandomForestClassifier",
            "sklearn.linear_model.SGDClassifier",
            "sklearn.neural_network.MLPClassifier"
        ],
        "type": "bool"
    },
    "weight_concentration_prior": {
        "classes": [
            "sklearn.mixture.BayesianGaussianMixture"
        ],
        "type": "complex/multitype"
    },
    "weight_concentration_prior_type": {
        "classes": [
            "sklearn.mixture.BayesianGaussianMixture"
        ],
        "type": "str"
    },
    "weights": {
        "classes": [
            "sklearn.neighbors.KNeighborsClassifier",
            "sklearn.neighbors.RadiusNeighborsClassifier"
        ],
        "type": "str"
    }
}