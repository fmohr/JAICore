sourceSets {
    main {
        resources {
        	srcDir 'resources'
    	}
    }
}


dependencies {
  	// basic dependencies
	compile project(':hasco-core')

	// JAICore dependencies
	compile project(':JAICore:jaicore-basic')
	compile project(':JAICore:jaicore-experiments')
	compile project(':JAICore:jaicore-logic') 
	compile project(':JAICore:jaicore-planning')
	compile project(':JAICore:jaicore-search')
	compile (project(':JAICore:jaicore-ml')) {
		exclude group: 'org.nd4j'
		exclude group: 'org.deeplearning4j'
		exclude group: 'edu.stanford.nlp'
	}
	
	compile ('org.api4:ai-ml')
		
	// https://mvnrepository.com/artifact/commons-cli/commons-cli
	compile group: 'commons-cli', name: 'commons-cli', version: '1.4'

	testCompile project(path: ':JAICore:jaicore-basic', configuration: 'testArtifacts')
	testCompile project(path: ':JAICore:jaicore-search', configuration: 'testArtifacts')
	testCompile project(path: ':JAICore:jaicore-ml', configuration: 'testArtifacts')
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        		authentication(userName: "${ossrhUsername}", password: "${ossrhPassword}")
      		}	
      		snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        		authentication(userName: "${ossrhUsername}", password: "${ossrhPassword}")
      		}

      		pom.project {
        		name 'MLPlan'
        		packaging 'jar'
        		// optionally artifactId can be defined here 
        		description 'This project provides an implementation of the AutoML tool ML-Plan.'
        		url 'https://libs.ai'

        		scm {
          			connection 'scm:git:https://github.com/fmohr/AILibs.git'
          			developerConnection 'scm:git:https://github.com/fmohr/AILibs.git'
          			url 'https://github.com/fmohr/AILibs'
        		}

        		licenses {
          			license {
            			name 'GPLv3'
            			url 'https://www.gnu.org/licenses/gpl-3.0.en.html'
          			}
        		}

        		developers {
          			developer {
            			id 'fmohr'
            			name 'Felix Mohr'
            			email 'felix.mohr@upb.de'
          			}
          			developer {
          				id 'mwever'    
          			    name 'Marcel Wever'
          			    email 'marcel.wever@upb.de'
          			}
          			developer {
          			    id 'ahetzer'
          			    name 'Alexander Hetzer'
          			    email 'alexander.hetzer@upb.de'
          			}
        		}
      		}
    	}
  	}
}

//task mlplanCLIjar(type: Jar) {
//	zip64 = true
//    manifest {
//        attributes 'Main-Class': 'de.upb.crc901.mlplan.cli.MLPlanCLI'
//    }
//    destinationDir = file("${projectDir}/cli")
//    archivesBaseName="mlplancli"
//    exclude ('META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA')
//    from sourceSets.main.allSource
//    from { (configurations.compile)
//            .collect { it.isDirectory() ? it : zipTree(it) } }
//    with jar
//}

