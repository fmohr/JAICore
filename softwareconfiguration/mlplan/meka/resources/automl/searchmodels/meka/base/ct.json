{
  "repository" : "meka.classifiers.multilabel.CT",
  "include" : [ ],
  "components" : [ {
    "name" : "meka.classifiers.multilabel.CT",
    "providedInterface" : [ "MLClassifier", "BasicMLClassifier" ],
    "requiredInterface" : [ {
      "id" : "W",
      "name" : "AbstractClassifier"
    } ],
    "parameters" : [ {
      "name" : "H",
      "comment" : "Determines the width of the trellis (use 0 for chain; use _1 for a square trellis, i.e., width of sqrt(number of labels)).",
      "type" : "cat",
      "default" : "0",
      "values" : [ "0", "-1" ]
    }, {
      "name" : "X",
      "comment" : "The way to measure dependencies. default: lbf (frequencies only) | TODO: No label dependence still missing as an option",
      "type" : "cat",
      "default" : "lbf",
      "values" : [ "lbf", "C", "I", "Ib", "H", "Hbf", "X", "F", "L", "None" ]
    }, {
      "comment" : "Determines the neighbourhood density (the number of neighbours for each node in the trellis). CAUTION: default obtained from source code. No idea about good other values ",
      "name" : "L",
      "type" : "int",
      "default" : 1,
      "min" : 1,
      "max" : 4,
      "minInterval" : 1,
      "refineSplits" : 4
    }, {
      "name" : "Is",
      "comment" : "The number of iterations to search the chain space at train time. default: 0",
      "type" : "int",
      "default" : 0,
      "min" : 0,
      "max" : 1500,
      "minInterval" : 5,
      "refineSplits" : 8
    }, {
      "name" : "Iy",
      "comment" : "The number of iterations to search the output space at test time. default: 10",
      "type" : "int",
      "default" : 10,
      "min" : 0,
      "max" : 100,
      "minInterval" : 1,
      "refineSplits" : 8
    }, {
      "name" : "P",
      "comment" : "Sets the payoff function. Any of those listed in regular evaluation output will do (e.g., 'Exact match'). default: Exact match",
      "type" : "cat",
      "default" : "Exact match",
      "values" : [ "Accuracy", "Jaccard index", "Hamming score", "Exact match", "Jaccard distance", "Hamming loss", "ZeroOne loss", "Harmonic score", "One error", "Rank loss", "Avg precision", "Log Loss (lim. L)", "Log Loss (lim. D)", "Micro Precision", "Micro Recall", "Macro Precision", "Macro Recall", "F1 (micro averaged)", "F1 (macro averaged by example)", "F1 (macro averaged by label)", "AUPRC (macro averaged)", "AUROC (macro averaged)", "Levenshtein distance" ]
    } ]
  } ]
}